{"version":3,"sources":["components/SearchForm.js","Home.js","components/Paginations.js","components/ResultItem.js","components/Loader.js","ResultsPage.js","SingleResult.js","App.js","index.js"],"names":["SearchForm","props","navigate","useNavigate","useState","currentSearch","state","setState","loadingState","loadindState","className","onSubmit","event","preventDefault","type","id","placeholder","value","onChange","target","disabled","role","onClick","Home","Paginations","currentPage","totalPages","pages","i","item","push","onEnter","node","gsap","from","y","delay","ease","opacity","stagger","amount","ResultItem","blockRef","useRef","nom","activitePrincipale","siren","useEffect","current","ref","Loader","ResultsPage","loading","error","result","nothingFound","useParams","searchText","a","fetch","response","ok","status","json","responseData","console","total_results","etablissement","map","nom_raison_sociale","libelle_activite_principale","total_pages","MONTHS","SingleResult","searchSiren","details","siege_social","ItemDetails","siret","date_creation","libelle_nature_juridique_entreprise","geo_adresse","useLayoutEffect","years","slice","month","parseInt","day","formatedDate","NotFoundPage","style","padding","to","App","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bc6f72ed.chunk.js","sourcesContent":["import {useNavigate} from \"react-router-dom\";\nimport {useState} from \"react\";\n\nconst SearchForm = (props) => {\n    const navigate = useNavigate()\n    const [state, setState] = useState(props.currentSearch || \"\")\n    const loadingState = props.loadindState || false\n\n    const handleTextChange = event => {\n        setState(event.target.value)\n    }\n\n    return(\n        <form className={\"row\"} onSubmit={(event) => {\n            //prevent the submit event from triggering the page reload\n            event.preventDefault()\n            ; navigate(`/resultats/${state}/1`)}\n        }>\n            <div className=\"col-sm-12 col-md-9 my-1 ps-0\">\n                <input type=\"search\" className=\"form-control\" id=\"searchText\" placeholder=\"Entrez un nom, un siret ou un siren\" value={state} onChange={handleTextChange}/>\n            </div>\n            <div className=\"col-sm-12 col-md-3 my-1 pe-0\">\n                {loadingState && <button className=\"btn btn-primary w-100\" disabled type=\"button\">\n                    <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"/>\n                    <span className={\"d-sm-none\"}>Recherche en cours</span>\n                </button>}\n                {!loadingState && <button className=\"btn btn-primary w-100\" type=\"button\" onClick={() => navigate(`/resultats/${state}/1`)}>\n                    Lancer\n                </button>}\n            </div>\n        </form>\n    )\n}\n\n\nexport default SearchForm","import SearchForm from \"./components/SearchForm\";\n\nconst Home = () => {\n    return (\n        <div className={\"row\"}>\n            <h1 className={\"text-center my-4\"}>Annuaire des entreprises en France</h1>\n            <SearchForm/>\n            <p className={\"text-primary text-center fs-4 my-3\"}>Retrouvez toutes les informations publiques concernant les entreprises fran√ßaises</p>\n        </div>\n    )\n}\n\nexport default Home","import {useNavigate} from \"react-router-dom\";\n\nexport const Paginations = (props) => {\n    const navigate = useNavigate()\n    const currentPage = props.currentPage\n    let totalPages = props.totalPages\n    const currentSearch = props.currentSearch\n\n    let pages = [];\n    for (let i = 1; i <= (totalPages); i++) {\n        if (totalPages > 10){\n            //limit the maximum pages to 10 to avoid incredible number of paginations\n            totalPages = 10\n        }\n        const item =  <li key={`page-${i}`} className={`page-item ${(i - currentPage === 0) ? \"active\" : \"\" }`}>\n            <button className=\"page-link\" onClick={() => navigate(`/resultats/${currentSearch}/${i}`)}>{i}</button>\n        </li>\n        pages.push(item)\n    }\n\n    return(\n        <nav className={\"row my-3\"}>\n            <ul className=\"pagination flex-wrap justify-content-center\">\n                <li className={`page-item ${currentPage - 1 === 0 ? \"disabled\" : \"\" }`}>\n                    <button className=\"page-link\" onClick={() => navigate(`/resultats/${currentSearch}/${(currentPage * 1) - 1}`)}>Pr√©c√©dent</button>\n                </li>\n                {pages}\n                <li className={`page-item ${currentPage - totalPages === 0 ? \"disabled\" : \"\" }`}>\n                    <button className=\"page-link\" onClick={() => navigate(`/resultats/${currentSearch}/${(currentPage * 1) + 1}`)}>Suivant</button>\n                </li>\n            </ul>\n        </nav>\n    )\n\n}","import {useNavigate} from \"react-router-dom\";\nimport {useEffect, useRef} from \"react\";\nimport gsap from \"gsap\"\n\nexport const onEnter = node => {\n    gsap.from(\n        node,\n        0.7,\n        {\n            y: 100,\n            delay: 0.3,\n            ease: \"back\",\n            opacity: 0,\n            stagger: {\n                amount: 0.8\n            }\n        }\n    )\n}\n\nexport const ResultItem = (props) => {\n    const blockRef = useRef()\n    const navigate = useNavigate()\n    const {nom, activitePrincipale, siren} = props\n\n    useEffect(() => (\n        onEnter(blockRef.current)\n    ))\n\n    return (\n        <div ref={blockRef} className=\"card border-0 col-sm-12 col-md-4\">\n            <div className=\"card-body rounded-2 bg-light custom-shadow  my-2 mx-2\">\n                <h5 className=\"card-title\">{nom}</h5>\n                <p className=\"card-text\">{activitePrincipale}</p>\n                <button className=\"btn btn-primary\" onClick={() => navigate(`/entreprise/${siren}`)}>Plus de d√©tails</button>\n            </div>\n        </div>\n    )\n\n}\n\n","export const Loader = () => (\n    <div className=\"col-12 my-5 d-flex justify-content-center align-items-center\">\n        <div className=\"spinner-border text-primary\" role=\"status\"/>\n        <span className=\"sr-only\"> &nbsp; Chargement...</span>\n    </div>\n)","import {useParams} from \"react-router-dom\";\nimport SearchForm from \"./components/SearchForm\";\nimport {useEffect, useState} from \"react\";\nimport {Paginations} from \"./components/Paginations\";\nimport {ResultItem} from \"./components/ResultItem\";\nimport {Loader} from \"./components/Loader\";\n\nconst ResultsPage = () => {\n    const [state, setState] = useState({loading: true, error: false, result: null, nothingFound: false})\n    const {searchText, currentPage} = useParams();\n\n    useEffect(() => {\n        (\n            async () => {\n                //set loading state\n                setState(state => ({...state ,loading: true, error: false}))\n                try{\n                    //get response from api call\n                    const response = await fetch(`https://entreprise.data.gouv.fr/api/sirene/v1/full_text/${searchText}?per_page=12&page=${currentPage}`)\n                    if (response.ok && response.status !== 404){\n                        const responseData = await response.json()\n                        //set result state with response datas and disable loading state\n                        setState(state => ({...state ,loading: false, error: false, result: responseData, nothingFound: false}))\n                    }\n                    if (response.status === 404){\n                        const responseData = await response.json()\n                        console.error(responseData)\n                        //set result state with response datas and disable loading state\n                        setState(state => ({...state ,loading: false, error: false, result: null, nothingFound: true}))\n                    }\n                } catch (error) {\n                    // set error data and disable loading state\n                    console.error(error)\n                    setState(state => ({...state ,loading: false, error: true, result: error, nothingFound: false}))\n                }\n            }\n        )()\n    }, [currentPage, searchText])\n\n    return (\n        <div className={\"row mt-2\"}>\n            <h1 className={\"text-center my-4\"}>Annuaire des entreprises en France</h1>\n            <SearchForm currentSearch={searchText} loadindState={state.loading}/>\n            <div className=\"row\">\n                {//display if there's an error\n                    state.error && <div className=\"col-12 py-3\">\n                    <p className=\"text-danger\">Oops, il y a eu une erreur. Essayez de relancer la recherche ou v√©rifiez votre connexion</p>\n                </div>}\n\n                {//display result items only if there's a result that isn't an error and if the page is not loading\n                    state.nothingFound && <p className={\"text-center py-3\"}>ü§î Nous n'avons rien trouv√© qui ressemble √† \"{searchText}\". V√©rifiez l'orthographe ou changez de recherche.</p>\n                }\n\n                {//display if the page is loading\n                    state.loading && <Loader/>}\n\n                {//display result items only if there's a result that isn't an error and if the page is not loading\n                    (state.result != null && !state.loading && !state.error) && <div className=\"container mt-3\">\n                        <h2>{state.result.total_results} {(state.result.total_results > 1) ? \"r√©sultats trouv√©s\" : \"r√©sultat touv√©\"} pour \"{searchText}\"</h2>\n                        {(state.result.total_results > 1000) && <p className={\"alert-warning p-1 rounded-1\"}>üò≥ √áa fait beaucoup l√†. Essayez d'affiner votre recherche pour un r√©sultat pr√©cis.</p>}\n                        <div className=\"row\">\n                            {\n                                state.result.etablissement.map(item => (\n                                    <ResultItem key={item.id} nom={item.nom_raison_sociale} activitePrincipale={item.libelle_activite_principale} siren={item.siren}/>\n                                ))\n                            }\n                        </div>\n                        {(state.result.total_pages >= 1) && <Paginations totalPages={state.result.total_pages} currentSearch={searchText} currentPage={currentPage}/>}\n                    </div>}\n            </div>\n        </div>\n    )\n}\n\nexport default ResultsPage","import {useParams} from \"react-router-dom\";\nimport SearchForm from \"./components/SearchForm\";\nimport {useEffect, useLayoutEffect, useRef, useState} from \"react\";\nimport {Loader} from \"./components/Loader\";\nimport {onEnter} from \"./components/ResultItem\";\nconst MONTHS = [\"Janvier\", \"F√©vrier\", \"Mars\", \"Avril\", \"Mai\", \"Juin\", \"Juillet\", \"Ao√ªt\", \"Septembre\", \"Octobre\", \"Novembre\", \"D√©cembre\"]\n\nexport const SingleResult = () => {\n    const [state, setState] = useState({loading: true, error: false, result: null, nothingFound: false})\n    const {searchSiren} = useParams();\n\n    useEffect(() => {\n        (\n            async () => {\n                //set loading state\n                setState(state => ({...state ,loading: true, error: false}))\n                try{\n                    //get response from api call\n                    const response = await fetch(`https://entreprise.data.gouv.fr/api/sirene/v1/siren/${searchSiren}`)\n                    if (response.ok && response.status !== 404){\n                        const responseData = await response.json()\n                        //set result state with response datas and disable loading state\n                        setState(state => ({...state ,loading: false, error: false, result: responseData, nothingFound: false}))\n                    }\n                    if (response.status === 404){\n                        const responseData = await response.json()\n                        console.error(responseData)\n                        //set result state with response datas and disable loading state\n                        setState(state => ({...state ,loading: false, error: false, result: null, nothingFound: true}))\n                    }\n                } catch (error) {\n                    // set error data and disable loading state\n                    console.error(error)\n                    setState(state => ({...state ,loading: false, error: true, result: error, nothingFound: false}))\n                }\n            }\n        )()\n    }, [searchSiren])\n\n    return (\n        <div className={\"container-fluid\"}>\n            <h1 className={\"text-center my-4\"}>Annuaire des entreprises en France</h1>\n            <SearchForm currentSearch={searchSiren} loadindState={state.loading}/>\n            {(!state.error && state.result != null) && <ItemDetails details={state.result.siege_social}/>}\n            <div className=\"row messages\">\n                {//display if there's an error\n                    state.error && <div className=\"col-12 py-3\">\n                        <p className=\"text-danger\">Oops, il y a eu une erreur. Essayez de relancer la recherche ou v√©rifiez votre connexion</p>\n                    </div>}\n                {//display result items only if there's a result that isn't an error and if the page is not loading\n                    state.nothingFound && <p className={\"text-center py-3\"}>ü§î Nous n'avons rien trouv√© qui ressemble √† \"{searchSiren}\". V√©rifiez l'orthographe ou changez de recherche.</p>\n                }\n\n                {//display if the page is loading\n                    state.loading && <Loader/>}\n            </div>\n        </div>\n    )\n}\n\nconst ItemDetails = (props) => {\n    const blockRef = useRef()\n    const {siren, siret, libelle_activite_principale, date_creation, nom_raison_sociale, libelle_nature_juridique_entreprise, geo_adresse} = props.details\n\n    const formatedDate = () => {\n            const years = date_creation.slice(0, 4)\n            const month = parseInt(date_creation.slice(4, 6), 10)\n            const day = date_creation.slice(6, 8)\n            return `${day} ${MONTHS[(month-1)]} ${years}`\n    }\n    useLayoutEffect(() => {\n        onEnter(blockRef.current)\n    })\n\n    return (\n        <div ref={blockRef} className=\"item-details mt-3 h-100 bg-light p-3 rounded-3\">\n            <div className=\"titles\">\n                <h2 className={\"item-name\"}>{nom_raison_sociale}</h2>\n                <p className={\"item-siren\"}>{siren}</p>\n                <p className=\"item-date\"><span className={\"fw-bold\"}>Date de cr√©ation: </span>{formatedDate()}</p>\n                <p className=\"item-siren\"><span className={\"fw-bold\"}>Siren: </span>{siren}</p>\n                <p className=\"item-siret\"><span className={\"fw-bold\"}>Siret: </span>{siret}</p>\n                <p className=\"item-statut\"><span className={\"fw-bold\"}>Nature juridique: </span>{libelle_nature_juridique_entreprise}</p>\n                <div className=\"item-description\">\n                    <p className={\"fw-bold\"}>Activit√© principale:</p>\n                    <p>{libelle_activite_principale}</p>\n                </div>\n                <div className=\"item-adresse\"><span className={\"fw-bold\"}>Si√®ge social: </span>{geo_adresse}</div>\n            </div>\n        </div>\n    )\n}","import {Link, Route, Routes} from \"react-router-dom\";\nimport Home from \"./Home\";\nimport ResultsPage from \"./ResultsPage\";\nimport {SingleResult} from \"./SingleResult\";\n\n\nconst App = () => {\n    return(\n        <div className=\"App\">\n            <header className={\"container-fluid px-0\"}>\n                <nav className=\"px-2 navbar navbar-expand-lg navbar-light bg-light justify-content-between\">\n                    <Link to={\"/\"} className={\"navbar-brand\"}>Annuaire d'entreprises</Link>\n                    <span className=\"navbar-tex\"> Toutes les donn√©es publics des entreprises en France</span>\n                </nav>\n            </header>\n            <main className={\"container\"}>\n                <Routes>\n                    <Route path=\"/\" element={<Home />} />\n                    <Route path=\"resultats/:searchText/:currentPage\" element={<ResultsPage />} />\n                    <Route path=\"entreprise/:searchSiren\" element={<SingleResult />} />\n                    <Route path=\"*\" element={<NotFoundPage/>}/>\n                </Routes>\n            </main>\n        </div>\n    )\n}\n\nconst NotFoundPage = () => (\n    <div className={\"row d-flex h-100 align-items-center\"} style={{ padding: \"1rem\" }}>\n        <h1 className={\"text-center\"}>Erreur 404, Page non trouv√© </h1>\n        <button className={\"btn btn-primary\"}>\n            <Link to={\"/\"}>Retour √† la page d'acceuil</Link>\n        </button>\n    </div>\n)\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <BrowserRouter>\n          <App />\n      </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}