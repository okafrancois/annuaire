{"version":3,"sources":["Home.js","components/SearchForm.js","components/Paginations.js","components/ResultItem.js","ResultsPage.js","App.js","index.js"],"names":["Home","useState","searchText","state","setState","navigate","useNavigate","className","type","id","placeholder","value","onChange","event","searchValue","target","onClick","SearchForm","props","currentSearch","loadingState","loadindState","onSubmit","preventDefault","disabled","role","Paginations","currentPage","totalPages","pages","i","item","push","ResultItem","nom","activitePrincipale","ResultsPage","loading","error","result","nothingFound","useParams","useEffect","a","fetch","response","ok","status","json","responseData","console","total_results","etablissement","map","nom_raison_sociale","libelle_activite_principale","total_pages","NotFoundPage","style","padding","to","App","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.73fdd2eb.chunk.js","sourcesContent":["import {useState} from \"react\";\nimport {useNavigate} from \"react-router-dom\";\n\nconst Home = () => {\n    const [state, setState] = useState({searchText: \"\"})\n    const navigate = useNavigate()\n\n    const handleSearchTexteChange = event => {\n        const searchValue = event.target.value\n        if (searchValue !== null){\n            setState({searchText: searchValue})\n        }\n    }\n\n    return (\n        <div className={\"row\"}>\n            <h1 className={\"text-center my-4\"}>Annuaire des entreprises en France</h1>\n            <form className={\"row\"}>\n                <div className=\"col-10\">\n                    <input type=\"search\" className=\"form-control\" id=\"searchText\" placeholder=\"Entrez un nom, un siret ou un siren\" value={state.searchText} onChange={handleSearchTexteChange}/>\n                </div>\n                <div className=\"col-2\">\n                    <button className=\"btn btn-primary w-100\" type=\"button\" onClick={() => navigate(`/resultats/${state.searchText}/1`)}>\n                        Lancer\n                    </button>\n                </div>\n            </form>\n            <p className={\"text-primary text-center fs-4 my-3\"}>Retrouvez toutes les informations publiques concernant les entreprises françaises</p>\n        </div>\n    )\n}\n\nexport default Home","import {useNavigate} from \"react-router-dom\";\nimport {useState} from \"react\";\n\nconst SearchForm = (props) => {\n    const navigate = useNavigate()\n    const [state, setState] = useState(props.currentSearch)\n    const loadingState = props.loadindState\n\n    const handleTextChange = event => {\n        setState(event.target.value)\n    }\n\n    return(\n        <form className={\"row\"} onSubmit={(event) => {\n            //prevent the submit event from triggering the page reload\n            event.preventDefault()\n            ; navigate(`/resultats/${state}/1`)}\n        }>\n            <div className=\"col-sm-12 col-md-9 my-1\">\n                <input type=\"search\" className=\"form-control\" id=\"searchText\" placeholder=\"Entrez un nom, un siret ou un siren\" value={state} onChange={handleTextChange}/>\n            </div>\n            <div className=\"col-sm-12 col-md-3 my-1\">\n                {loadingState && <button className=\"btn btn-primary w-100\" disabled type=\"button\">\n                    <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"/>\n                    <span className={\"d-sm-none\"}>Recherche en cours</span>\n                </button>}\n                {!loadingState && <button className=\"btn btn-primary w-100\" type=\"button\" onClick={() => navigate(`/resultats/${state}/1`)}>\n                    Lancer\n                </button>}\n            </div>\n        </form>\n    )\n}\n\n\nexport default SearchForm","import {useNavigate} from \"react-router-dom\";\n\nexport const Paginations = (props) => {\n    const navigate = useNavigate()\n    const currentPage = props.currentPage\n    let totalPages = props.totalPages\n    const currentSearch = props.currentSearch\n\n    let pages = [];\n    for (let i = 1; i <= (totalPages); i++) {\n        if (totalPages > 10){\n            //limit the maximum pages to 10 to avoid incredible number of paginations\n            totalPages = 10\n        }\n        const item =  <li key={`page-${i}`} className={`page-item ${(i - currentPage === 0) ? \"active\" : \"\" }`}>\n            <button className=\"page-link\" onClick={() => navigate(`/resultats/${currentSearch}/${i}`)}>{i}</button>\n        </li>\n        pages.push(item)\n    }\n\n    return(\n        <nav className={\"row my-3\"}>\n            <ul className=\"pagination\">\n                <li className={`page-item ${currentPage - 1 === 0 ? \"disabled\" : \"\" }`}>\n                    <button className=\"page-link\" onClick={() => navigate(`/resultats/${currentSearch}/${(currentPage * 1) - 1}`)}>Précédent</button>\n                </li>\n                {pages}\n                <li className={`page-item ${currentPage - totalPages === 0 ? \"disabled\" : \"\" }`}>\n                    <button className=\"page-link\" onClick={() => navigate(`/resultats/${currentSearch}/${(currentPage * 1) + 1}`)}>Suivant</button>\n                </li>\n            </ul>\n        </nav>\n    )\n\n}","import \"../styles/card-list.css\"\n\nexport const ResultItem = (props) => {\n    const {nom, activitePrincipale} = props\n\n    return (\n        <div className=\"card border-0 rounded-2 bg-light my-2  custom-shadow\">\n            <div className=\"card-body\">\n                <h5 className=\"card-title\">{nom}</h5>\n                <p className=\"card-text\">{activitePrincipale}</p>\n                {/** @TODO add single enterprise page and pass it enterprise siren trough urls params**/}\n                <button className=\"btn btn-primary disabled\">Voir plus</button>\n            </div>\n        </div>\n    )\n\n}\n\n","import {useParams} from \"react-router-dom\";\nimport SearchForm from \"./components/SearchForm\";\nimport {useEffect, useState} from \"react\";\nimport {Paginations} from \"./components/Paginations\";\nimport {ResultItem} from \"./components/ResultItem\";\n\nconst ResultsPage = () => {\n    const [state, setState] = useState({loading: true, error: false, result: null, nothingFound: false})\n    const {searchText, currentPage} = useParams();\n\n    useEffect(() => {\n        (\n            async () => {\n                //set loading state\n                setState(state => ({...state ,loading: true, error: false}))\n                try{\n                    //get response from api call\n                    const response = await fetch(`https://entreprise.data.gouv.fr/api/sirene/v1/full_text/${searchText}?per_page=10&page=${currentPage}`)\n                    if (response.ok && response.status !== 404){\n                        const responseData = await response.json()\n                        //set result state with response datas and disable loading state\n                        setState(state => ({...state ,loading: false, error: false, result: responseData, nothingFound: false}))\n                    }\n                    if (response.status === 404){\n                        const responseData = await response.json()\n                        console.error(responseData)\n                        //set result state with response datas and disable loading state\n                        setState(state => ({...state ,loading: false, error: false, result: null, nothingFound: true}))\n                    }\n                } catch (error) {\n                    // set error data and disable loading state\n                    console.error(error)\n                    setState(state => ({...state ,loading: false, error: true, result: error, nothingFound: false}))\n                }\n            }\n        )()\n    }, [currentPage, searchText])\n\n    return (\n        <div className={\"row mt-2\"}>\n            <h1 className={\"text-center my-4\"}>Annuaire des entreprises en France</h1>\n            <SearchForm currentSearch={searchText} loadindState={state.loading}/>\n            <div className=\"row\">\n                {//display if there's an error\n                    state.error && <div className=\"col-12 py-3\">\n                    <p className=\"text-danger\">Oops, il y a eu une erreur. Essayez de relancer la recherche ou vérifiez votre connexion</p>\n                </div>}\n\n                {//display if the page is loading\n                    state.loading && <div className=\"col-12 my-5 d-flex justify-content-center align-items-center\">\n                    <div className=\"spinner-border text-primary\" role=\"status\"/>\n                    <span className=\"sr-only\">Chargement...</span>\n                </div>}\n\n                {//display result items only if there's a result that isn't an error and if the page is not loading\n                    state.nothingFound && <p className={\"text-center py-3\"}>🤔 Nous n'avons rien trouvé qui ressemble à \"{searchText}\". Vérifiez l'orthographe ou changez de recherche.</p>\n                }\n\n                {//display result items only if there's a result that isn't an error and if the page is not loading\n                    (state.result != null && !state.loading && !state.error) && <div className=\"container mt-3\">\n                        <h2>{state.result.total_results} {(state.result.total_results > 1) ? \"résultats trouvés\" : \"résultat touvé\"} pour \"{searchText}\"</h2>\n                        {(state.result.total_results > 1000) && <p className={\"alert-warning p-1 rounded-1\"}>😳 Ça fait beaucoup là. Essayez d'affiner votre recherche pour un résultat précis.</p>}\n                        <div className=\"row\">\n                            {\n                                state.result.etablissement.map(item => (\n                                    <ResultItem key={item.id} nom={item.nom_raison_sociale} activitePrincipale={item.libelle_activite_principale}/>\n                                ))\n                            }\n                        </div>\n                        {(state.result.total_pages >= 1) && <Paginations totalPages={state.result.total_pages} currentSearch={searchText} currentPage={currentPage}/>}\n                    </div>}\n            </div>\n        </div>\n    )\n}\n\nexport default ResultsPage","import './styles/App.css';\nimport {Link, Route, Routes} from \"react-router-dom\";\nimport Home from \"./Home\";\nimport ResultsPage from \"./ResultsPage\";\n\n\nconst App = () => {\n    return(\n        <div className=\"App\">\n            <header className={\"container-fluid px-0\"}>\n                <nav className=\"px-2 navbar navbar-expand-lg navbar-light bg-light justify-content-between\">\n                    <Link to={\"/\"} className={\"navbar-brand\"}>Annuaire d'entreprises</Link>\n                    <span className=\"navbar-tex\"> Toutes les données publics des entreprises en France</span>\n                </nav>\n            </header>\n            <main className={\"container\"}>\n                <Routes>\n                    <Route path=\"/\" element={<Home />} />\n                    <Route path=\"resultats/:searchText/:currentPage\" element={<ResultsPage />} />\n                    <Route path=\"*\" element={<NotFoundPage/>}/>\n                </Routes>\n            </main>\n        </div>\n    )\n}\n\nconst NotFoundPage = () => (\n    <div className={\"row d-flex h-100 align-items-center\"} style={{ padding: \"1rem\" }}>\n        <h1 className={\"text-center\"}>Erreur 404, Page non trouvé </h1>\n        <button className={\"btn btn-primary\"}>\n            <Link to={\"/\"}>Retour à la page d'acceuil</Link>\n        </button>\n    </div>\n)\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <BrowserRouter>\n          <App />\n      </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}